# В Python существует несколько типов данных, которые можно использовать для работы с различными видами информации. Вот основные категории:

                     # Числовые типы данных:
# int: Целые числа
x = 10
# float: Вещественные числа (числа с плавающей точкой)
y = 10.5
# complex: Комплексные числа
z = 3 + 5j

                     # Логический тип:
# bool: Представляет значения True или False
is_valid = True

                     # Строки:
# str: Текстовые данные.
name = "Python"

                     # Последовательности:
# list: Изменяемые последовательности элементов
fruits = ["apple", "banana", "cherry"]
# tuple: Неизменяемые последовательности
coordinates = (10, 20, 30)
# range: Последовательность чисел
numbers = range(5)  # 0, 1, 2, 3, 4

                      # Множества:
# set: Набор уникальных элементов
unique_numbers = {1, 2, 3, 4, 5}
# frozenset: Неизменяемое множество
frozen = frozenset([1, 2, 3])

                        # Словари:
# dict: Наборы пар "ключ-значение"
user = {"name": "Alice", "age": 25}

                        # Тип данных None:
# NoneType: Используется для обозначения отсутствия значения
result = None

                       # Байтовые типы:
# bytes: Последовательность байтов.
data = b"Hello"
# bytearray: Модифицируемая последовательность байтов.
data = bytearray(5)
# memoryview: Представление данных в памяти
mv = memoryview(b"Hello")

                        # Проверка типа данных:
# Чтобы узнать тип переменной, используется функция type():
x = 42
print(type(x))  # <class 'int'>

                       # Преобразование типов данных:
# Для преобразования типов можно использовать встроенные функции, такие как int(), float(), str(), и другие:
num_str = "123"
num = int(num_str)  # Преобразование строки в целое число
num = float(num_str)  # Преобразование строки в число с плавающей точкой

                            # ПРИМЕРЫ
# Преобразование числа в строку:
num = 123
num_str = str(num)
print(num_str)  # '123'
print(type(num_str))  # <class 'str'>
# Преобразование числа с плавающей точкой:
float_num = 12.34
float_str = str(float_num)
print(float_str)  # '12.34'
# Преобразование логического значения:
boolean = True
boolean_str = str(boolean)
print(boolean_str)  # 'True'
# Преобразование списка:
my_list = [1, 2, 3]
list_str = str(my_list)
print(list_str)  # '[1, 2, 3]'
# Преобразование словаря:
my_dict = {"key": "value", "num": 42}
dict_str = str(my_dict)
print(dict_str)  # "{'key': 'value', 'num': 42}"
    
                             # Использование внутри строки:
# Если нужно включить значение в строку, то можно комбинировать str() с другими операциями:
num = 456
message = "The number is " + str(num)
print(message)  # 'The number is 456'
# Форматированный вывод (альтернативный способ):
#Вместо явного преобразования можно использовать форматирование строк:   
# num = 789
message = f"The number is {num}"
print(message)  # 'The number is 789'
                         
                                                                               