# Кортеж в Python — это неизменяемая (immutable) коллекция данных, которая позволяет хранить несколько элементов в одном объекте. 
# Кортежи имеют синтаксис, аналогичный спискам, но они ограничены в возможностях, поскольку не поддерживают изменение своих элементов после создания. 
# Кортежи обычно используются, когда нужно хранить данные, которые не должны изменяться.

# Создание кортежа: Кортеж создается с использованием круглых скобок ().
tuple1 = (1, 2, 3)
tuple2 = ('a', 'b', 'c')
empty_tuple = ()  # Пустой кортеж
single_element_tuple = (1,)  # Кортеж с одним элементом, нужно ставить запятую

# Доступ к элементам кортежа: Доступ к элементам кортежа осуществляется через индексы, как и в списках.
tuple1 = (10, 20, 30)
print(tuple1[0])  # 10
print(tuple1[-1])  # 30 (обращение с конца)

# Кортежи неизменяемы: Элементы кортежа не могут быть изменены после его создания, но можно создавать новые кортежи, комбинируя существующие.
tuple1 = (1, 2, 3)
# tuple1[0] = 4  # Это вызовет ошибку TypeError

# Конкатенация и повторение кортежей: Кортежи можно объединять или повторять.
tuple1 = (1, 2, 3)
tuple2 = (4, 5, 6)
combined_tuple = tuple1 + tuple2  # (1, 2, 3, 4, 5, 6)
repeated_tuple = tuple1 * 2  # (1, 2, 3, 1, 2, 3)

                                       # Методы кортежей: 
# Хотя кортежи в Python неизменяемы, у них есть несколько методов, которые позволяют работать с ними:

# count() — возвращает количество вхождений элемента в кортеже.
tuple1 = (1, 2, 2, 3, 2)
print(tuple1.count(2))  # 3

# index() — находит индекс первого вхождения элемента в кортеже.
tuple1 = (10, 20, 30)
print(tuple1.index(20))  # 1

# Проверка на принадлежность (in): Кортежи поддерживают операторы in и not in для проверки наличия элемента в кортеже.
tuple1 = (10, 20, 30)
print(20 in tuple1)  # True
print(40 in tuple1)  # False

# Извлечение элементов через срезы (slicing): Кортежи поддерживают срезы для извлечения части кортежа.
tuple1 = (1, 2, 3, 4, 5)
print(tuple1[1:4])  # (2, 3, 4)

# Основные отличия от списков
# Неизменяемость: После создания кортеж нельзя изменить (нет операций добавления, удаления или изменения элементов).
# Производительность: Кортежи более быстрые в сравнении с списками, особенно при использовании в качестве ключей в словарях.
# Использование: Кортежи полезны, когда данные не должны изменяться, например, при хранении координат или данных для словарей.

                                        # Преобразования
# Список в кортеж:
list1 = [1, 2, 3]
tuple1 = tuple(list1)
print(tuple1)  # (1, 2, 3)

# Кортеж в список:
tuple1 = (1, 2, 3)
list1 = list(tuple1)
print(list1)  # [1, 2, 3]

# Кортежи — это полезная структура данных в Python, особенно когда требуется неизменяемая коллекция, которая будет использоваться для хранения фиксированных данных.
                                       
