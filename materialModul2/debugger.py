'''Debugger (отладчик) в Python
Отладчик — это инструмент для пошагового выполнения программы, позволяющий анализировать её поведение, находить ошибки и проверять значение переменных в процессе работы.

Основные возможности отладчика
Пошаговое выполнение кода.
Установка точек останова (breakpoints).
Просмотр и изменение значений переменных.
Перемещение по стеку вызовов.
Перехват исключений.
Популярные отладчики для Python
pdb — встроенный отладчик Python.

Отладчик в IDE:
PyCharm (встроенный визуальный интерфейс для отладки).
Visual Studio Code (с расширением Python Debugger).

Дополнительные инструменты:
ipdb — улучшенный интерфейс для pdb.
pdb++ — расширение встроенного отладчика с удобными функциями.

Использование встроенного отладчика pdb
1. Добавление точки остановки в коде
Для включения отладки в определённой части кода можно использовать:
import pdb; pdb.set_trace()

def divide(a, b):
    import pdb; pdb.set_trace()  # Точка останова
    return a / b

result = divide(10, 2)
print(result)

Во время выполнения программа остановится, и вы перейдёте в режим отладки.

2. Команды в pdb
n (next) — Выполнить следующую строку.
s (step) — Зайти внутрь функции.
c (continue) — Продолжить выполнение до следующей точки останова.
q (quit) — Завершить отладку.
l (list) — Показать текущий участок кода.
p <имя_переменной> — Вывести значение переменной.
h (help) — Показать справку по командам.

3. Пример отладки в pdb
def divide(a, b):
    import pdb; pdb.set_trace()
    return a / b

try:
    result = divide(10, 0)
except ZeroDivisionError as e:
    print(f"Ошибка: {e}")
При выполнении:

Программа остановится на строке с pdb.set_trace().
Вы сможете ввести команды для анализа текущего состояния:
p a, p b — чтобы посмотреть значения a и b.
n — перейти на следующую строку.
Отладка в IDE
PyCharm
Установите точку останова, щёлкнув слева от номера строки в редакторе.
Нажмите Shift + F9 или кнопку "Debug".
Используйте панель отладки для пошагового выполнения и анализа.
Visual Studio Code
Убедитесь, что расширение Python установлено.
Установите точку останова, щёлкнув слева от строки кода.
Нажмите F5 для запуска отладчика.
Советы для эффективной отладки
Минимизируйте точки останова — добавляйте их только там, где необходимо.
Используйте логирование — иногда print или logging удобнее отладки.
Понимайте стек вызовов — если ошибка сложная, отладчик покажет все вызовы функций.
Объединяйте методы — используйте отладчик в сочетании с тестами, чтобы быстрее находить ошибки.'''