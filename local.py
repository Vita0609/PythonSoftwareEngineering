# В Python область видимости переменных (scope) определяет, где и как можно использовать эти переменные в коде.
#  Основные области видимости переменных включают глобальную, локальную и область внешних функций (nonlocal).
#  Рассмотрим эти области более детально:

                               #  Локальная область видимости
# Переменные, определенные внутри функции, называются локальными. 
# Эти переменные доступны только в этой функции и не могут быть использованы вне ее.
def my_function():
    x = 10  # локальная переменная
    print(x)

my_function()
print(x)  # Ошибка: переменная x не существует за пределами функции

                               # Глобальная область видимости
# Переменные, определенные вне всех функций, имеют глобальную область видимости. 
# Они доступны в любом месте программы, включая функции, если в функции не определена переменная с таким же именем.
x = 10  # глобальная переменная

def my_function():
    print(x)  # доступ к глобальной переменной

my_function()
print(x)  # доступ к глобальной переменной

                                 # Область видимости внешней функции (nonlocal)
# Когда мы работаем с вложенными функциями, переменные из внешней функции могут быть доступны внутренним функциям, но только если они не являются глобальными.
#  Чтобы изменить значение переменной из внешней функции, используется ключевое слово nonlocal.
def outer_function():
    x = 10  # переменная внешней функции
    
    def inner_function():
        nonlocal x  # использование переменной внешней функции
        x += 5
    
    inner_function()
    print(x)  # 15, так как внутреняя функция изменила значение переменной

outer_function()

                                    # Глобальные переменные в функциях
# Для изменения глобальной переменной внутри функции нужно использовать ключевое слово global.
x = 10  # глобальная переменная

def modify_global():
    global x  # доступ к глобальной переменной
    x = 20

modify_global()
print(x)  # 20

                                     # Принцип LEGB (Local, Enclosing, Global, Built-in)
# Когда Python ищет переменную, он использует принцип LEGB для определения, где искать:

#  L (Local) — локальная область, функция или блок кода.
#  E (Enclosing) — область внешних функций.
#  G (Global) — глобальная область.
#  B (Built-in) — встроенные имена, например, print или len.
# Пример с LEGB:
x = 10  # глобальная переменная

def outer():
    x = 20  # переменная во внешней функции
    def inner():
        x = 30  # локальная переменная
        print(x)  # будет выведено 30 (локальная область)
    inner()
    
outer()
print(x)  # будет выведено 10 (глобальная область)

# Понимание области видимости переменных важно для эффективной работы с кодом в Python. 
# Локальные, глобальные и внешние области позволяют контролировать доступ и изменение значений переменных в разных частях программы.