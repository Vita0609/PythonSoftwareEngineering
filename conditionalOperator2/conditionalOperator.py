# Условное исполнение кода
# По умолчанию в Python инструкции выполняются одна за другой сверху вниз. 
# Последовательность выполнения выражений в программе называется поток выполнения (Flow of execution).

#У Python существует три способа управления потоком выполнения:
#условное исполнение – выполнение блока инструкций только при некотором условии;
#циклы – повторение выполнения блока инструкций, пока выполняется некоторое условие;
#исключения – механизм обработки ошибок, позволяющий управлять потоком программы при возникновении исключительных ситуаций (например, ошибок или других непредвиденных обстоятельств).
#В Python условное исполнение, циклы и исключения формируют основу управления потоком выполнения программы, позволяя разрабатывать сложные и гибкие алгоритмы обработки данных и взаимодействия с пользователем.
#Условный оператор в Python – это конструкция языка, позволяющая выполнять определенные действия в зависимости от того, выполняется ли определенное условие.
if <умова>:
    <тіло if-блоку>
else:
    <тіло else-блоку>
# if <условие>: выражение, возвращаемое True или False
# <тело if-блока> это набор инструкций, которые выполняются, если условие есть True
# <тела else-блока> это набор инструкций, которые выполняются, если условие есть False. Блок else является необязательным и может быть опущен

             # Сокращеная форма тернарного оператора
is_nice = True
if is_nice:
    state = "nice"
else:
    state = "not nice"

# Еще одним полезным вариантом тернарного оператора в Python является использование оператора или для быстрого определения значения. 
some_data = None
msg = some_data or "Не було повернено даних"
# В прикладі ми присвоїмо msg значення some_data, якщо some_data не є None (або іншим значенням, яке вважається неправдивим у Python, 
# як False, порожній рядок, порожній список тощо). У випадку, якщо some_data є None або неправдивим, msg отримає значення 
# "Не було повернено даних". В нашому випадку msg буде містити рядок 'Не було повернено даних', це зручно, коли потрібно швидко перевірити значення та показати повідомлення, якщо значення some_data є None.

# Без использования сокращенной формы тернарного оператора с or, выражение msg = some_data or "Не возвращены данные" может быть переписан с использованием стандартного условного оператора if ... else ... следующим образом:  
some_data = None
if some_data:
    msg = some_data
else:
    msg = "Не було повернено даних"

# Обратите внимание, что для сокращенной формы используется именно оператор или (ИЛИ).
